{"version":3,"sources":["reducer/reducer.js","components/ToolBar/ToolBar.jsx","components/CurrentTable/BodyOfTable/BodyOfTable.jsx","components/CurrentTable/HeaderOfTable/HeaderOfTable.jsx","components/CurrentTable/SortFilterTableFooter/SortFilterTableFooter.jsx","components/CurrentTable/CurrentTable.jsx","App.jsx","index.js"],"names":["ContextApp","React","createContext","InitialState","row","col","areFieldsReady","tableArray","filtred","filtredCol","filtredValue","Reducer","state","action","produce","draft","type","payload","array","i","colArray","j","push","id","value","updatedTaleArray","map","indexCol","sort","a","b","isNaN","sortUp","ToolBar","useContext","dispatch","className","onChange","e","target","onClick","BodyOfTable","isFiltredTableArray","filter","toLowerCase","indexOf","item","indexRow","key","HeaderOfTable","useState","scrolled","setScrolled","useEffect","handleScroll","header","document","getElementById","window","pageYOffset","offsetHeight","addEventListener","removeEventListener","indexOfHeader","SortFilterTableFooter","indexOfSortedCol","Math","random","indexOfFiltredCol","placeholder","CurrentTable","App","useReducer","Provider","ReactDOM","render"],"mappings":"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","file":"static/js/main.886abf69.chunk.js","sourcesContent":["import React from 'react';\r\nimport produce from \"immer\";\r\n\r\nexport const ContextApp = React.createContext();\r\nexport const InitialState = {\r\n    row: 5,\r\n    col: 3,\r\n    areFieldsReady: false,\r\n    tableArray: [],\r\n    filtred: false,\r\n    filtredCol: null,\r\n    filtredValue: []\r\n};\r\n\r\nexport const Reducer = (state, action) =>\r\n    produce(state, draft => {\r\n        switch (action.type) {\r\n            case 'SET__ROW':\r\n                draft.row = action.payload;\r\n                draft.areFieldsReady = false;\r\n            break;\r\n\r\n            case 'SET__COL':\r\n                draft.col = action.payload;\r\n                draft.areFieldsReady = false;\r\n             break;\r\n\r\n            case 'TABLE__READY':\r\n                const array = [];\r\n                for (let i = 0; i < state.row; i++) {\r\n                    let colArray = [];\r\n                    for (let j = 0; j < state.col; j++) {\r\n                        colArray.push({id: ''+i+j, value: ''})\r\n                    }\r\n                    array.push(colArray)\r\n                }\r\n                draft.areFieldsReady = true;\r\n                draft.tableArray = array;\r\n                break;\r\n\r\n            case 'VALUE__CHANGE':\r\n                    const updatedTaleArray = draft.tableArray.map(row => {\r\n                    if(row[action.indexCol].id === action.id) {\r\n                        row[action.indexCol].value = action.payload;\r\n                        return row;\r\n                    }\r\n                        return row });\r\n                draft.tableArray = updatedTaleArray;\r\n                break;\r\n\r\n            case 'HANDLE__SORT':\r\n\r\n                draft.tableArray.sort((a,b) => {\r\n                    if (isNaN(+a[action.payload].value)?\r\n                        a[action.payload].value > b[action.payload].value\r\n                        :\r\n                        +a[action.payload].value > +b[action.payload].value) {\r\n                        if(action.sortUp) {\r\n                            return 1\r\n                        }\r\n                        return -1\r\n                    } else if (isNaN(+a[action.payload].value)?\r\n                        a[action.payload].value < b[action.payload].value\r\n                        :\r\n                        +a[action.payload].value < +b[action.payload].value) {\r\n                        if(action.sortUp) {\r\n                            return -1\r\n                        }\r\n                        return 1\r\n                    } else {\r\n                        return 0\r\n                    }\r\n                });\r\n\r\n               break;\r\n\r\n            case 'HANDLE__FILTER':\r\n                draft.filtredValue[action.payload] = action.value;\r\n                draft.filtredCol = action.payload;\r\n                draft.filtred = action.value === ''? false : true;\r\n                break;\r\n\r\n         }\r\n    })\r\n","import React, {useContext} from 'react';\r\nimport {ContextApp} from \"../../reducer/reducer\";\r\n\r\nimport './ToolBar.css'\r\n\r\nconst ToolBar = () => {\r\n\r\n    const {state, dispatch} = useContext(ContextApp);\r\n    const {row, col} = state;\r\n\r\n    return (\r\n        <div className='toolBar'>\r\n            <input type=\"number\"\r\n                   value={col}\r\n                   onChange={(e) => dispatch({\r\n                        type: 'SET__COL',\r\n                        payload: e.target.value\r\n                    })}/>\r\n            <input type=\"number\"\r\n                   value={row}\r\n                   onChange={(e) => dispatch({\r\n                        type: 'SET__ROW',\r\n                        payload: e.target.value\r\n                   })}/>\r\n            <button onClick={() => dispatch({\r\n                        type: 'TABLE__READY'\r\n                        })}>\r\n                Создать таблицу\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToolBar;","import React, {useContext} from 'react';\r\nimport {ContextApp} from \"../../../reducer/reducer\";\r\n\r\nconst BodyOfTable = () => {\r\n    const {state, dispatch} = useContext(ContextApp);\r\n    const {tableArray, filtred, filtredCol, filtredValue} = state;\r\n\r\n    const isFiltredTableArray = filtred ?\r\n        tableArray.filter(row => row[filtredCol].value.toLowerCase().indexOf(filtredValue[filtredCol].toLowerCase()) >= 0)\r\n        :\r\n        tableArray;\r\n\r\n    return (\r\n        <tbody>\r\n            {isFiltredTableArray.map((item, indexRow) =>\r\n                <tr key={indexRow}>\r\n                    {isFiltredTableArray[0].map((item, indexCol) =>\r\n                        <td key={indexCol}>\r\n                            <input key={indexCol+indexRow}\r\n                                   type=\"text\"\r\n                                   className={indexCol % 2 === 1? 'even__col' : ''}\r\n                                   value={isFiltredTableArray[indexRow]? isFiltredTableArray[indexRow][indexCol].value  : ''}\r\n                                   onChange={(e) => dispatch({\r\n                                       type: 'VALUE__CHANGE',\r\n                                       payload: e.target.value,\r\n                                       indexCol,\r\n                                       indexRow,\r\n                                       id: isFiltredTableArray[indexRow][indexCol].id\r\n                                   })\r\n                                   }/>\r\n                        </td> )}\r\n\r\n                </tr>)}\r\n        </tbody>\r\n    );\r\n};\r\n\r\nexport default BodyOfTable;","import React, {useContext, useEffect, useState} from 'react';\r\nimport {ContextApp} from \"../../../reducer/reducer\";\r\n\r\nconst HeaderOfTable = () => {\r\n\r\n    const {state, dispatch} = useContext(ContextApp);\r\n    const {tableArray} = state\r\n\r\n    const [ scrolled, setScrolled ] = useState();\r\n\r\n    useEffect(() => {\r\n        const handleScroll = () => {\r\n            const header = document.getElementById('header')\r\n            if (window.pageYOffset > header.offsetHeight ) {\r\n                setScrolled(true)\r\n            } else {\r\n                setScrolled(false)\r\n            }\r\n        }\r\n        window.addEventListener('scroll', handleScroll)\r\n        return () => {\r\n            window.removeEventListener('scroll', handleScroll)\r\n        }\r\n    });\r\n\r\n    return (\r\n        <thead >\r\n            <tr id='header' className={scrolled? 'fixed' : ''}>\r\n                {tableArray[0].map((item, indexOfHeader) =>\r\n                    <th key={indexOfHeader}>\r\n                        <input key={indexOfHeader+1}\r\n                               className='header'\r\n                               type=\"text\"\r\n                               onChange={(e) => dispatch({\r\n                                   type: 'SET__HEADER',\r\n                                   payload: e.target.value,\r\n                                   indexOfHeader\r\n                               })\r\n                               }/>\r\n                    </th> )}\r\n            </tr>\r\n        </thead>\r\n\r\n    );\r\n};\r\n\r\nexport default HeaderOfTable;","import React, {useContext} from 'react';\r\nimport {ContextApp} from \"../../../reducer/reducer\";\r\n\r\nconst SortFilterTableFooter = () => {\r\n    const {state, dispatch} = useContext(ContextApp);\r\n    const {tableArray} = state\r\n\r\n    return (\r\n        <tfoot>\r\n            <tr>\r\n                {tableArray[0].map((item, indexOfSortedCol) =>\r\n                    <td key={indexOfSortedCol}>\r\n                        <button key={Math.random()}\r\n                                className='sort__button'\r\n                                onClick={() => dispatch({\r\n                                    type: 'HANDLE__SORT',\r\n                                    payload: indexOfSortedCol,\r\n                                    sortUp: true\r\n                                })\r\n                                }>SORT up</button>\r\n                    </td> )}\r\n            </tr>\r\n\r\n            <tr>\r\n\r\n                {tableArray[0].map((item, indexOfSortedCol) =>\r\n                    <td key={indexOfSortedCol}>\r\n                        <button key={Math.random()}\r\n                                className='sort__button'\r\n                                onClick={() => dispatch({\r\n                                    type: 'HANDLE__SORT',\r\n                                    payload: indexOfSortedCol,\r\n                                    sortUp: false\r\n                                })\r\n                                }>SORT Down</button>\r\n                    </td> )}\r\n            </tr>\r\n\r\n            <tr>\r\n                {tableArray[0].map((item, indexOfFiltredCol) =>\r\n                    <td key={indexOfFiltredCol+1}>\r\n                        <input key={indexOfFiltredCol}\r\n                               className='filter__input'\r\n                               placeholder='filter...'\r\n                               onChange={(e) => dispatch({\r\n                                   type: 'HANDLE__FILTER',\r\n                                   payload: indexOfFiltredCol,\r\n                                   value: e.target.value\r\n                               })\r\n                               }/>\r\n\r\n                    </td> )}\r\n            </tr>\r\n        </tfoot>\r\n    );\r\n};\r\n\r\nexport default SortFilterTableFooter;","import React, {useContext} from 'react';\r\nimport {ContextApp} from \"../../reducer/reducer\";\r\nimport BodyOfTable from \"./BodyOfTable/BodyOfTable\";\r\n\r\nimport './CurrentTable.css'\r\nimport HeaderOfTable from \"./HeaderOfTable/HeaderOfTable\";\r\nimport SortFilterTableFooter from \"./SortFilterTableFooter/SortFilterTableFooter\";\r\n\r\nconst CurrentTable = () => {\r\n    \r\n    const {state, dispatch} = useContext(ContextApp);\r\n    const { areFieldsReady} = state;\r\n\r\n\r\n   if(areFieldsReady) {\r\n\r\n       return (\r\n            <table >\r\n\r\n                <HeaderOfTable />\r\n                <BodyOfTable />\r\n                <SortFilterTableFooter />\r\n\r\n            </table>\r\n       )\r\n   };\r\n   return false\r\n\r\n};\r\n\r\nexport default CurrentTable;\r\n","import React, {useReducer} from 'react';\r\n\r\nimport {ContextApp, InitialState, Reducer} from \"./reducer/reducer\";\r\nimport ToolBar from \"./components/ToolBar/ToolBar\";\r\nimport CurrentTable from \"./components/CurrentTable/CurrentTable\";\r\n\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\r\n    const [state, dispatch] = useReducer(Reducer, InitialState);\r\n\r\n  return (\r\n        <ContextApp.Provider value={{dispatch, state}}>\r\n        <div className='container'>\r\n          <ToolBar/>\r\n          <CurrentTable/>\r\n        </div>\r\n        </ContextApp.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}