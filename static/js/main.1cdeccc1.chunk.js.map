{"version":3,"sources":["reducer/reducer.js","components/ToolBar/ToolBar.jsx","components/CurrentTable/BodyOfTable/BodyOfTable.jsx","components/CurrentTable/HeaderOfTable/HeaderOfTable.jsx","components/CurrentTable/SortFilterTableFooter/SortFilterTableFooter.jsx","components/CurrentTable/CurrentTable.jsx","App.jsx","index.js"],"names":["ContextApp","React","createContext","InitialState","row","col","areFieldsReady","tableArray","filtred","filtredCol","filtredValue","Reducer","state","action","produce","draft","type","payload","array","i","colArray","j","push","indexRow","indexCol","sort","a","b","isNaN","sortUp","value","isFultred","ToolBar","useContext","dispatch","className","onChange","e","target","onClick","BodyOfTable","isFiltredTableArray","filter","map","item","key","HeaderOfTable","useState","scrolled","setScrolled","useEffect","handleScroll","header","document","getElementById","window","pageYOffset","offsetHeight","addEventListener","removeEventListener","id","indexOfHeader","SortFilterTableFooter","indexOfSortedCol","Math","random","indexOfFiltredCol","CurrentTable","rowArray","App","useReducer","Provider","ReactDOM","render"],"mappings":"gRAGaA,EAAaC,IAAMC,gBACnBC,EAAe,CACxBC,IAAK,EACLC,IAAK,EACLC,gBAAgB,EAChBC,WAAY,GACZC,SAAS,EACTC,WAAY,KACZC,aAAc,IAGLC,EAAU,SAACC,EAAOC,GAAR,OACnBC,YAAQF,GAAO,SAAAG,GACX,OAAQF,EAAOG,MACX,IAAK,WACDD,EAAMX,IAAMS,EAAOI,QACnBF,EAAMT,gBAAiB,EAC3B,MAEA,IAAK,WACDS,EAAMV,IAAMQ,EAAOI,QACnBF,EAAMT,gBAAiB,EAC1B,MAED,IAAK,eAED,IADA,IAAMY,EAAQ,GACLC,EAAI,EAAGA,EAAIP,EAAMR,IAAKe,IAAK,CAEhC,IADA,IAAIC,EAAW,GACNC,EAAI,EAAGA,EAAIT,EAAMP,IAAKgB,IAC3BD,EAASE,KAAK,IAElBJ,EAAMI,KAAKF,GAEfL,EAAMT,gBAAiB,EACvBS,EAAMR,WAAaW,EACnB,MAGJ,IAAK,gBACDH,EAAMR,WAAWM,EAAOU,UAAUV,EAAOW,UAAYX,EAAOI,QAC5D,MAEJ,IAAK,eAEDF,EAAMR,WAAWkB,MAAK,SAACC,EAAEC,GACrB,OAAIC,OAAOF,EAAEb,EAAOI,UAChBS,EAAEb,EAAOI,SAAWU,EAAEd,EAAOI,UAE5BS,EAAEb,EAAOI,UAAYU,EAAEd,EAAOI,UAC5BJ,EAAOgB,OACC,GAEH,GACDD,OAAOF,EAAEb,EAAOI,UACvBS,EAAEb,EAAOI,SAAWU,EAAEd,EAAOI,UAE5BS,EAAEb,EAAOI,UAAYU,EAAEd,EAAOI,UAC5BJ,EAAOgB,QACE,EAEL,EAEA,KAIhB,MAEH,IAAK,iBACDd,EAAML,aAAaG,EAAOI,SAAWJ,EAAOiB,MAC5C,MAEJ,IAAK,iBACDf,EAAMP,QAAUK,EAAOkB,UACvBhB,EAAMN,WAAaI,EAAOI,aC5C3Be,G,MA5BC,WAAO,IAAD,EAEQC,qBAAWjC,GAA9BY,EAFW,EAEXA,MAAOsB,EAFI,EAEJA,SACP9B,EAAYQ,EAAZR,IAAKC,EAAOO,EAAPP,IAEZ,OACI,yBAAK8B,UAAU,WACX,2BAAOnB,KAAK,SACLc,MAAOzB,EACP+B,SAAU,SAACC,GAAD,OAAOH,EAAS,CACrBlB,KAAM,WACNC,QAASoB,EAAEC,OAAOR,WAE9B,2BAAOd,KAAK,SACLc,MAAO1B,EACPgC,SAAU,SAACC,GAAD,OAAOH,EAAS,CACrBlB,KAAM,WACNC,QAASoB,EAAEC,OAAOR,WAE9B,4BAAQS,QAAS,kBAAML,EAAS,CACpBlB,KAAM,mBADlB,4FCQGwB,EA7BK,WAAO,IAAD,EACIP,qBAAWjC,GAA9BY,EADe,EACfA,MAAOsB,EADQ,EACRA,SACP3B,EAAiDK,EAAjDL,WAAYC,EAAqCI,EAArCJ,QAASC,EAA4BG,EAA5BH,WAAYC,EAAgBE,EAAhBF,aAElC+B,EAAsBjC,EAAUD,EAAWmC,QAAO,SAAAtC,GAAG,OAAIA,EAAIK,KAAgBC,EAAaD,MAAeF,EAE/G,OACI,+BACKkC,EAAoBE,KAAI,SAACC,EAAMrB,GAAP,OACrB,wBAAIsB,IAAKtB,GACJkB,EAAoB,GAAGE,KAAI,SAACC,EAAMpB,GAAP,OACxB,wBAAIqB,IAAKrB,GACL,2BAAOqB,IAAKrB,EAASD,EACdP,KAAK,OACLc,MAAOW,EAAoBlB,GAAWkB,EAAoBlB,GAAUC,GAAY,GAChFY,SAAU,SAACC,GAAD,OAAOH,EAAS,CACtBlB,KAAM,gBACNC,QAASoB,EAAEC,OAAOR,MAClBN,WACAD,0BCuBxBuB,G,MA1CO,SAAC,GAAgB,IAAf1B,EAAc,EAAdA,SAAc,EAERa,qBAAWjC,GAAvBkC,GAFoB,EAE3BtB,MAF2B,EAEpBsB,UAFoB,EAIAa,qBAJA,mBAI1BC,EAJ0B,KAIhBC,EAJgB,KAqBlC,OAfAC,qBAAU,WACN,IAAMC,EAAe,WACjB,IAAMC,EAASC,SAASC,eAAe,UACnCC,OAAOC,YAAcJ,EAAOK,aAC5BR,GAAY,GAEZA,GAAY,IAIpB,OADAM,OAAOG,iBAAiB,SAAUP,GAC3B,WACHI,OAAOI,oBAAoB,SAAUR,OAKzC,+BACI,wBAAIS,GAAG,SAASzB,UAAWa,EAAU,QAAU,IAC1C5B,EAASuB,KAAI,SAACC,EAAMiB,GAAP,OACV,wBAAIhB,IAAKgB,GACL,2BAAOhB,IAAKgB,EAAc,EACnB1B,UAAU,SACVnB,KAAK,OACLoB,SAAU,SAACC,GAAD,OAAOH,EAAS,CACtBlB,KAAM,cACNC,QAASoB,EAAEC,OAAOR,MAClB+B,6BCoCpBC,EApEe,SAAC,GAAgB,IAAf1C,EAAc,EAAdA,SAAc,EAChBa,qBAAWjC,GAAvBkC,GAD4B,EACnCtB,MADmC,EAC5BsB,UAEd,OACI,+BACI,4BACKd,EAASuB,KAAI,SAACC,EAAMmB,GAAP,OACV,wBAAIlB,IAAKkB,GACL,4BAAQlB,IAAKmB,KAAKC,SACV9B,UAAU,eACVI,QAAS,kBAAML,EAAS,CACpBlB,KAAM,eACNC,QAAS8C,EACTlC,QAAQ,MALpB,gBAWZ,4BAEKT,EAASuB,KAAI,SAACC,EAAMmB,GAAP,OACV,wBAAIlB,IAAKkB,GACL,4BAAQlB,IAAKmB,KAAKC,SACV9B,UAAU,eACVI,QAAS,kBAAML,EAAS,CACpBlB,KAAM,eACNC,QAAS8C,EACTlC,QAAQ,MALpB,kBAWZ,4BACKT,EAASuB,KAAI,SAACC,EAAMsB,GAAP,OACV,wBAAIrB,IAAKqB,EAAkB,GACvB,2BAAOrB,IAAKqB,EACL/B,UAAU,gBACVC,SAAU,SAACC,GAAD,OAAOH,EAAS,CACtBlB,KAAM,iBACNC,QAASiD,EACTpC,MAAOO,EAAEC,OAAOR,WAI3B,yBAAKK,UAAU,kBACX,4BAAQI,QAAS,kBAAML,EAAS,CAC5BlB,KAAM,iBACNC,QAASiD,EACTnC,WAAW,MAHf,WAOJ,yBAAKI,UAAU,kBACX,4BAAQI,QAAS,kBAAML,EAAS,CAC5BlB,KAAM,iBACNC,QAASiD,EACTnC,WAAW,MAHf,kBCpBboC,EA9BM,WAAO,IAAD,EAEGlC,qBAAWjC,GAA9BY,EAFgB,EAEhBA,MACAR,GAHgB,EAET8B,SACqBtB,EAA5BR,KAAKC,EAAuBO,EAAvBP,IAIb,GAJoCO,EAAlBN,eAIC,CAGd,IAFA,IAAM8D,EAAW,GACXhD,EAAW,GACRD,EAAI,EAAGA,EAAIf,EAAKe,IACtBiD,EAAS9C,KAAKH,GAEjB,IAAK,IAAIA,EAAI,EAAGA,EAAId,EAAKc,IACtBC,EAASE,KAAKH,GAElB,OACK,+BAEI,kBAAC,EAAD,CAAeC,SAAUA,IACzB,kBAAC,EAAD,CAAaA,SAAUA,EAAUgD,SAAUA,IAC3C,kBAAC,EAAD,CAAuBhD,SAAUA,KAK9C,OAAO,G,MCXKiD,MAdf,WAAgB,IAAD,EAEeC,qBAAW3D,EAASR,GAFnC,mBAEJS,EAFI,KAEGsB,EAFH,KAIb,OACM,kBAAClC,EAAWuE,SAAZ,CAAqBzC,MAAO,CAACI,WAAUtB,UACvC,yBAAKuB,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,SCXVqC,IAASC,OAAO,kBAAC,EAAD,MAASpB,SAASC,eAAe,W","file":"static/js/main.1cdeccc1.chunk.js","sourcesContent":["import React from 'react';\r\nimport produce from \"immer\";\r\n\r\nexport const ContextApp = React.createContext();\r\nexport const InitialState = {\r\n    row: 5,\r\n    col: 3,\r\n    areFieldsReady: false,\r\n    tableArray: [],\r\n    filtred: false,\r\n    filtredCol: null,\r\n    filtredValue: []\r\n};\r\n\r\nexport const Reducer = (state, action) =>\r\n    produce(state, draft => {\r\n        switch (action.type) {\r\n            case 'SET__ROW':\r\n                draft.row = action.payload;\r\n                draft.areFieldsReady = false;\r\n            break;\r\n\r\n            case 'SET__COL':\r\n                draft.col = action.payload;\r\n                draft.areFieldsReady = false;\r\n             break;\r\n\r\n            case 'TABLE__READY':\r\n                const array = [];\r\n                for (let i = 0; i < state.row; i++) {\r\n                    let colArray = [];\r\n                    for (let j = 0; j < state.col; j++) {\r\n                        colArray.push('')\r\n                    }\r\n                    array.push(colArray)\r\n                }\r\n                draft.areFieldsReady = true;\r\n                draft.tableArray = array;\r\n                break;\r\n\r\n\r\n            case 'VALUE__CHANGE':\r\n                draft.tableArray[action.indexRow][action.indexCol] = action.payload;\r\n                break;\r\n\r\n            case 'HANDLE__SORT':\r\n\r\n                draft.tableArray.sort((a,b) => {\r\n                    if (isNaN(+a[action.payload])?\r\n                        a[action.payload] > b[action.payload]\r\n                        :\r\n                        +a[action.payload] > +b[action.payload]) {\r\n                        if(action.sortUp) {\r\n                            return 1\r\n                        }\r\n                        return -1\r\n                    } else if (isNaN(+a[action.payload])?\r\n                        a[action.payload] < b[action.payload]\r\n                        :\r\n                        +a[action.payload] < +b[action.payload]) {\r\n                        if(action.sortUp) {\r\n                            return -1\r\n                        }\r\n                        return 1\r\n                    } else {\r\n                        return 0\r\n                    }\r\n                });\r\n\r\n               break;\r\n\r\n            case 'HANDLE__FILTER':\r\n                draft.filtredValue[action.payload] = action.value;\r\n                break;\r\n\r\n            case 'FILTER__TOGGLE':\r\n                draft.filtred = action.isFultred;\r\n                draft.filtredCol = action.payload;\r\n                break\r\n\r\n         }\r\n    })\r\n","import React, {useContext} from 'react';\r\nimport {ContextApp} from \"../../reducer/reducer\";\r\n\r\nimport './ToolBar.css'\r\n\r\nconst ToolBar = () => {\r\n\r\n    const {state, dispatch} = useContext(ContextApp);\r\n    const {row, col} = state;\r\n\r\n    return (\r\n        <div className='toolBar'>\r\n            <input type=\"number\"\r\n                   value={col}\r\n                   onChange={(e) => dispatch({\r\n                        type: 'SET__COL',\r\n                        payload: e.target.value\r\n                    })}/>\r\n            <input type=\"number\"\r\n                   value={row}\r\n                   onChange={(e) => dispatch({\r\n                        type: 'SET__ROW',\r\n                        payload: e.target.value\r\n                   })}/>\r\n            <button onClick={() => dispatch({\r\n                        type: 'TABLE__READY'\r\n                        })}>\r\n                Создать таблицу\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToolBar;","import React, {useContext} from 'react';\r\nimport {ContextApp} from \"../../../reducer/reducer\";\r\n\r\nconst BodyOfTable = () => {\r\n    const {state, dispatch} = useContext(ContextApp);\r\n    const {tableArray, filtred, filtredCol, filtredValue} = state;\r\n\r\n    const isFiltredTableArray = filtred ? tableArray.filter(row => row[filtredCol] === filtredValue[filtredCol]) : tableArray;\r\n\r\n    return (\r\n        <tbody>\r\n            {isFiltredTableArray.map((item, indexRow) =>\r\n                <tr key={indexRow}>\r\n                    {isFiltredTableArray[0].map((item, indexCol) =>\r\n                        <td key={indexCol}>\r\n                            <input key={indexCol+indexRow}\r\n                                   type=\"text\"\r\n                                   value={isFiltredTableArray[indexRow]? isFiltredTableArray[indexRow][indexCol] : ''}\r\n                                   onChange={(e) => dispatch({\r\n                                       type: 'VALUE__CHANGE',\r\n                                       payload: e.target.value,\r\n                                       indexCol,\r\n                                       indexRow\r\n                                   })\r\n                                   }/>\r\n                        </td> )}\r\n\r\n                </tr>)}\r\n        </tbody>\r\n    );\r\n};\r\n\r\nexport default BodyOfTable;","import React, {useContext, useEffect, useState} from 'react';\r\nimport {ContextApp} from \"../../../reducer/reducer\";\r\n\r\nconst HeaderOfTable = ({colArray}) => {\r\n\r\n    const {state, dispatch} = useContext(ContextApp);\r\n\r\n    const [ scrolled, setScrolled ] = useState();\r\n\r\n    useEffect(() => {\r\n        const handleScroll = () => {\r\n            const header = document.getElementById('header')\r\n            if (window.pageYOffset > header.offsetHeight ) {\r\n                setScrolled(true)\r\n            } else {\r\n                setScrolled(false)\r\n            }\r\n        }\r\n        window.addEventListener('scroll', handleScroll)\r\n        return () => {\r\n            window.removeEventListener('scroll', handleScroll)\r\n        }\r\n    });\r\n\r\n    return (\r\n        <thead >\r\n            <tr id='header' className={scrolled? 'fixed' : ''}>\r\n                {colArray.map((item, indexOfHeader) =>\r\n                    <th key={indexOfHeader}>\r\n                        <input key={indexOfHeader+1}\r\n                               className='header'\r\n                               type=\"text\"\r\n                               onChange={(e) => dispatch({\r\n                                   type: 'SET__HEADER',\r\n                                   payload: e.target.value,\r\n                                   indexOfHeader\r\n                               })\r\n                               }/>\r\n                    </th> )}\r\n            </tr>\r\n        </thead>\r\n\r\n    );\r\n};\r\n\r\nexport default HeaderOfTable;","import React, {useContext} from 'react';\r\nimport {ContextApp} from \"../../../reducer/reducer\";\r\n\r\nconst SortFilterTableFooter = ({colArray}) => {\r\n    const {state, dispatch} = useContext(ContextApp);\r\n\r\n    return (\r\n        <tfoot>\r\n            <tr>\r\n                {colArray.map((item, indexOfSortedCol) =>\r\n                    <td key={indexOfSortedCol}>\r\n                        <button key={Math.random()}\r\n                                className='sort__button'\r\n                                onClick={() => dispatch({\r\n                                    type: 'HANDLE__SORT',\r\n                                    payload: indexOfSortedCol,\r\n                                    sortUp: true\r\n                                })\r\n                                }>SORT up</button>\r\n                    </td> )}\r\n            </tr>\r\n\r\n            <tr>\r\n\r\n                {colArray.map((item, indexOfSortedCol) =>\r\n                    <td key={indexOfSortedCol}>\r\n                        <button key={Math.random()}\r\n                                className='sort__button'\r\n                                onClick={() => dispatch({\r\n                                    type: 'HANDLE__SORT',\r\n                                    payload: indexOfSortedCol,\r\n                                    sortUp: false\r\n                                })\r\n                                }>SORT Down</button>\r\n                    </td> )}\r\n            </tr>\r\n\r\n            <tr>\r\n                {colArray.map((item, indexOfFiltredCol) =>\r\n                    <td key={indexOfFiltredCol+1}>\r\n                        <input key={indexOfFiltredCol}\r\n                               className='filter__input'\r\n                               onChange={(e) => dispatch({\r\n                                   type: 'HANDLE__FILTER',\r\n                                   payload: indexOfFiltredCol,\r\n                                   value: e.target.value\r\n                               })\r\n                               }/>\r\n\r\n                        <div className='filter__button'>\r\n                            <button onClick={() => dispatch({\r\n                                type: 'FILTER__TOGGLE',\r\n                                payload: indexOfFiltredCol,\r\n                                isFultred: true\r\n                            })}>Filter</button>\r\n                        </div>\r\n\r\n                        <div className='filter__button'>\r\n                            <button onClick={() => dispatch({\r\n                                type: 'FILTER__TOGGLE',\r\n                                payload: indexOfFiltredCol,\r\n                                isFultred: false\r\n                            })}>Cancel</button>\r\n                        </div>\r\n\r\n                    </td> )}\r\n            </tr>\r\n        </tfoot>\r\n    );\r\n};\r\n\r\nexport default SortFilterTableFooter;","import React, {useContext} from 'react';\r\nimport {ContextApp} from \"../../reducer/reducer\";\r\nimport BodyOfTable from \"./BodyOfTable/BodyOfTable\";\r\n\r\nimport './CurrentTable.css'\r\nimport HeaderOfTable from \"./HeaderOfTable/HeaderOfTable\";\r\nimport SortFilterTableFooter from \"./SortFilterTableFooter/SortFilterTableFooter\";\r\n\r\nconst CurrentTable = () => {\r\n    \r\n    const {state, dispatch} = useContext(ContextApp);\r\n    const {row, col, areFieldsReady} = state;\r\n\r\n\r\n\r\n   if(areFieldsReady) {\r\n        const rowArray = [];\r\n        const colArray = [];\r\n        for (let i = 0; i < row; i++){\r\n           rowArray.push(i)\r\n        }\r\n        for (let i = 0; i < col; i++){\r\n           colArray.push(i)\r\n        }\r\n       return (\r\n            <table>\r\n\r\n                <HeaderOfTable colArray={colArray}/>\r\n                <BodyOfTable colArray={colArray} rowArray={rowArray}/>\r\n                <SortFilterTableFooter colArray={colArray}/>\r\n\r\n            </table>\r\n       )\r\n   };\r\n   return false\r\n\r\n};\r\n\r\nexport default CurrentTable;\r\n","import React, {useReducer} from 'react';\r\n\r\nimport {ContextApp, InitialState, Reducer} from \"./reducer/reducer\";\r\nimport ToolBar from \"./components/ToolBar/ToolBar\";\r\nimport CurrentTable from \"./components/CurrentTable/CurrentTable\";\r\n\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\r\n    const [state, dispatch] = useReducer(Reducer, InitialState);\r\n\r\n  return (\r\n        <ContextApp.Provider value={{dispatch, state}}>\r\n        <div className='container'>\r\n          <ToolBar/>\r\n          <CurrentTable/>\r\n        </div>\r\n        </ContextApp.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}